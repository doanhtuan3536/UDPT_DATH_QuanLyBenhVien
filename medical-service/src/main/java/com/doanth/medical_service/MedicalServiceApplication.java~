package com.doanth.medical_service;

import com.doanth.medical_service.dto.MedicalRecordAddDTO;
import com.doanth.medical_service.dto.MedicineInfoDTO;
import com.doanth.medical_service.models.MedicalRecord;
import com.doanth.medical_service.models.Medicine;
import org.modelmapper.Converter;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
public class MedicalServiceApplication {

	public static void main(String[] args) {
		SpringApplication.run(MedicalServiceApplication.class, args);
	}

	@Bean
	public ModelMapper getModelMapper() {
		ModelMapper mapper = new ModelMapper();
		mapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
		mapper.typeMap(MedicalRecordAddDTO.class, MedicalRecord.class)
				.addMapping(MedicalRecordAddDTO::getPatientId, MedicalRecord::setUserId);
		mapper.typeMap(MedicalRecord.class, MedicalRecordAddDTO.class)
				.addMapping(MedicalRecord::getUserId, MedicalRecordAddDTO::setPatientId);
		mapper.typeMap(Medicine.class, MedicineInfoDTO.class)
				.addMapping((medicine) -> medicine.getMedicineCategory().getMedicineCategoryId(), MedicineInfoDTO::setMedicineCategoryId)
				.addMapping((medicine) -> medicine.getMedicineCategory().getMedicineCategoryName(), MedicineInfoDTO::setMedicineCategoryName);

		Converter<Integer, MedicalRecord> specialtyConverter = ctx -> {
			if (ctx.getSource() == null) return null;
			MedicalRecord s = new MedicalRecord();
			s.setMedicalRecordId(ctx.getSource());
			return s;
		};

		mapper.typeMap(AppointmentInfoDTO.class, Appointment.class)
				.addMappings(m -> m.using(specialtyConverter)
						.map(AppointmentInfoDTO::getSpecialtyId, Appointment::setSpecialty));

		return mapper;
	}

}
